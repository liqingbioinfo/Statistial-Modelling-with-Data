library(ggplot2)
setwd("E:/PHD/Courses/Data 603/Datasets/DATA_603_L01/")
p1<-ggplot(optimal_model_approach2, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y ~ X2+X4+X5+I(X2^2)")
p2<-ggplot(optimal_model_approach3, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y~(X1+X2+X3+X4+X5+X6+X1:X6+X2:X6)")
grid.arrange(
p1,
p2,
nrow=2,
top="CLERICAL data: Scale-Location plot : Standardized Residual vs Fitted values"
)
library(ggplot2)
library(gridExtra)
p1<-ggplot(optimal_model_approach2, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y ~ X2+X4+X5+I(X2^2)")
p2<-ggplot(optimal_model_approach3, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y~(X1+X2+X3+X4+X5+X6+X1:X6+X2:X6)")
grid.arrange(
p1,
p2,
nrow=2,
top="CLERICAL data: Scale-Location plot : Standardized Residual vs Fitted values"
)
workhours = read.csv("CLERICAL.csv",header=TRUE)
head(workhours)
optimal_model_approach2=lm(Y ~ X2+X4+X5+I(X2^2), data=workhours)
optimal_model_approach3=lm(Y~(X1+X2+X3+X4+X5+X6+X1:X6+X2:X6), data=workhours)
#gglot and BP test
p1<-ggplot(optimal_model_approach2, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y ~ X2+X4+X5+I(X2^2)")
p2<-ggplot(optimal_model_approach3, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y~(X1+X2+X3+X4+X5+X6+X1:X6+X2:X6)")
grid.arrange(
p1,
p2,
nrow=2,
top="CLERICAL data: Scale-Location plot : Standardized Residual vs Fitted values"
)
head(workhours)
optimal_model_approach2=lm(Y ~ X2+X4+X5+I(X2^2), data=workhours)
optimal_model_approach3=lm(Y~(X1+X2+X3+X4+X5+X6+X1:X6+X2:X6), data=workhours)
p1<-ggplot(optimal_model_approach2, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y ~ X2+X4+X5+I(X2^2)")
p2<-ggplot(optimal_model_approach3, aes(x=.fitted, y=sqrt(abs(.stdresid)))) +
geom_point() +
geom_hline(yintercept = 0) +
geom_smooth()+
ggtitle("lm(Y~(X1+X2+X3+X4+X5+X6+X1:X6+X2:X6)")
p1
p2
grid.arrange(
p1,
p2,
nrow=2,
top="CLERICAL data: Scale-Location plot : Standardized Residual vs Fitted values"
)
bptest(optimal_model_approach2)
bptest(optimal_model_approach3)
library(lmtest)
bptest(optimal_model_approach2)
bptest(optimal_model_approach3)
?qplot
?hist
Advertising=read.table("Advertising.txt", header = TRUE, sep ="\t" )
head(Advertising)
model<-lm(sale~tv+radio+tv:radio, data=Advertising)
summary(model)
morepower11<-lm(sale~tv+I(tv^2)+I(tv^3)+I(tv^4)+I(tv^5)+I(tv^6)
+I(tv^7)+I(tv^8)+I(tv^9)+I(tv^10)+I(tv^11)
+radio+tv:radio,
data=Advertising)
morepower11$residuals
hist(morepower11$residuals)
qplot(residuals(morepower11),
geom="histogram",
binwidth = 0.1,
main = "Histogram of residuals",
xlab = "residuals", color="red",
fill=I("blue"))
qplot(residuals(morepower11),
geom="histogram",
binwidth = 0.1,
main = "Histogram of residuals",
xlab = "residuals", color="grey",
fill=I("lightblue"))
ggplot(data=Advertising, aes(residuals(morepower))) +
geom_histogram(breaks = seq(-1,1,by=0.1), col="grey", fill="lightblue") +
labs(title="Histogram for residuals") +
labs(x="residuals", y="Count")
ggplot(data=Advertising, aes(residuals(morepower11))) +
geom_histogram(breaks = seq(-1,1,by=0.1), col="grey", fill="lightblue") +
labs(title="Histogram for residuals") +
labs(x="residuals", y="Count")
dim(Advertising)
ggplot(data=Advertising, aes(residuals(morepower11))) +
geom_histogram(breaks = seq(-1,1,by=0.1), col="grey", fill="lightblue") +
labs(title="Histogram for residuals") +
labs(x="residuals", y="Count")+geom_smooth()
ggplot(data=Advertising, aes(residuals(morepower11))) +
geom_histogram(breaks = seq(-1,1,by=0.1), col="grey", fill="lightblue") +
labs(title="Histogram for residuals") +
labs(x="residuals", y="Count")+geom_smooth()
hist(morepower11$residuals)
ggplot(data=Advertising, aes(residuals(morepower11))) +
geom_histogram(breaks = seq(-1,1,by=0.1), col="grey", fill="lightblue") +
labs(title="Histogram for residuals") +
labs(x="residuals", y="Count")
x1<-rnorm(1000, mu=50, sigma=10)
x2<-rnorm(100, mu=30,sigma=10)
hist(x1)
hist(x2)
?rnorm
x1<-rnorm(1000, mean=50, sd=10)
x2<-rnorm(100, mean=30,sd=10)
hist(x1)
hist(x2)
